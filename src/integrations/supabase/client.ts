// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://uisjaqfkfdckvgwcdsyf.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InVpc2phcWZrZmRja3Znd2Nkc3lmIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY4MzQ0OTIsImV4cCI6MjA3MjQxMDQ5Mn0.3PAL-MPQx466fICK-sqSH1sSy92d3T69e_5hLdxhUXU";

// Temporarily using localStorage instead of cookie storage for debugging
const debugStorage = {
  getItem: (key: string): string | null => {
    try {
      if (typeof localStorage === 'undefined') return null;
      const value = localStorage.getItem(key);
      console.log('Auth Debug - Storage getItem:', key, value ? 'Found' : 'Not found');
      return value;
    } catch (error) {
      console.error('Auth Debug - Storage getItem error:', error);
      return null;
    }
  },
  setItem: (key: string, value: string): void => {
    try {
      if (typeof localStorage === 'undefined') return;
      localStorage.setItem(key, value);
      console.log('Auth Debug - Storage setItem:', key, 'Success');
    } catch (error) {
      console.error('Auth Debug - Storage setItem error:', error);
    }
  },
  removeItem: (key: string): void => {
    try {
      if (typeof localStorage === 'undefined') return;
      localStorage.removeItem(key);
      console.log('Auth Debug - Storage removeItem:', key, 'Success');
    } catch (error) {
      console.error('Auth Debug - Storage removeItem error:', error);
    }
  }
};

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: debugStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  }
});